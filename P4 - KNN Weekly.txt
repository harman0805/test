import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
# Load Smarket dataset
weekly_df = pd.read_csv("Weekly.csv")
# Preprocessing:Extracting features and target variable
X=weekly_df(['Direction','Year','Today'],axis=1).values
y=weekly_df['Direction'].map({'Up':1,'Down':0}).values

# Splitting dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Feature scaling
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)
 # Train KNN classifier
k=3#numbert of neighbors
knn_model = KNeighborsClassifier(n_neighbors=k)
knn_model.fit(X_train_scaled, y_train)
# Predict survival
y_pred = knn_model.predict(X_test_scaled)
# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
